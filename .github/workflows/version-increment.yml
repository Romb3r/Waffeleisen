name: Auto Version Increment

on:
  push:
    branches: [ main ]
    paths-ignore:
      - 'version.txt'  # Prevent infinite loops when version.txt is updated
  pull_request:
    branches: [ main ]
    types: [ closed ]

jobs:
  increment-version:
    runs-on: ubuntu-latest
    # Only run on pushes to main or merged PRs into main
    if: (github.event_name == 'push' && github.ref == 'refs/heads/main') || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0
        ref: main  # Always checkout main branch

    - name: Configure Git
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"

    - name: Determine version increment type
      id: version_type
      run: |
        if [ "${{ github.event_name }}" == "pull_request" ] && [ "${{ github.event.pull_request.merged }}" == "true" ]; then
          # PR merged into main - increment minor version
          echo "increment_type=minor" >> $GITHUB_OUTPUT
          echo "reason=PR #${{ github.event.pull_request.number }} merged into main" >> $GITHUB_OUTPUT
        else
          # Direct push to main - increment patch version
          echo "increment_type=patch" >> $GITHUB_OUTPUT
          echo "reason=Direct push to main" >> $GITHUB_OUTPUT
        fi

    - name: Increment version
      run: |
        # Read current version from main branch
        if [ -f version.txt ]; then
          current_version=$(cat version.txt)
          echo "Current version: $current_version"
        else
          current_version="1.0.0"
          echo "No version.txt found, starting with: $current_version"
        fi
        
        # Parse version components (assuming semantic versioning: major.minor.patch)
        IFS='.' read -r major minor patch <<< "$current_version"
        
        increment_type="${{ steps.version_type.outputs.increment_type }}"
        echo "Increment type: $increment_type (${{ steps.version_type.outputs.reason }})"
        
        # Increment version based on type
        case $increment_type in
          major)
            major=$((major + 1))
            minor=0
            patch=0
            ;;
          minor)
            minor=$((minor + 1))
            patch=0
            ;;
          patch|*)
            patch=$((patch + 1))
            ;;
        esac
        
        new_version="$major.$minor.$patch"
        echo "New version: $new_version"
        echo "$new_version" > version.txt

    - name: Commit and push changes
      run: |
        # Check if there are changes to commit
        if git diff --quiet version.txt; then
          echo "No changes to version.txt, skipping commit"
          exit 0
        fi
        
        # Add and commit the version file
        git add version.txt
        git commit -m "Auto-increment version to $(cat version.txt) [${{ steps.version_type.outputs.increment_type }}] [skip ci]"
        
        # Push the changes to main
        git push origin main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}